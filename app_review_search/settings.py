"""
Django settings for app_review_search project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-at1vgiaztywf==1bll_uv5j19^f1!ak+i2(f*#aw7r&wp*ynw$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'core',
    'rest_framework',  # ADD THIS
    'rest_framework.authtoken',  # ADD THIS for token authentication
    'corsheaders',  # ADD THIS
    'drf_spectacular',
    'django_extensions',  # ADD THIS LINE
    'core.apps.CoreConfig',  # <--- CRITICAL: Use this line ONLY for your 'core' app

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # MUST be here and high up
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app_review_search.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app_review_search.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# app_review_project/settings.py

# ... existing settings ...

# MESSAGE_TAGS = {
#     messages.DEBUG: 'alert-info',
#     messages.INFO: 'alert-info',
#     messages.SUCCESS: 'success', # Maps to your .message.success CSS class
#     messages.WARNING: 'alert-warning',
#     messages.ERROR: 'error',     # Maps to your .message.error CSS class
# }

# Add this for login redirects (e.g., if @login_required is used)
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = '/'  # Already set in urls.py, but good to have here too
# Django REST Framework Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',  # <--- ADD THIS LINE
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",  # Default Vue.js dev server port
    "http://127.0.0.1:8080",
    "http://localhost:5173"
    # Add your production Vue.js domain here when deployed, e.g., "https://your-vue-app.com"
]

SPECTACULAR_SETTINGS = {
    'TITLE': 'App Review Search API',  # Your API title
    'DESCRIPTION': 'API for searching apps, submitting reviews, and supervisor review management.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,  # Serve schema at /api/schema/
    # Optional: Authentication for API documentation (e.g., if you want to require login to see docs)
    # 'SERVE_PUBLIC': False, # Set to False to require authentication for schema access
    # 'SCHEMA_PATH_PREFIX': r'/api/', # Only generate schema for paths starting with /api/
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'displayRequestDuration': True,
        'filter': True,
        'showCommonExtensions': True,
        'docExpansion': 'none',  # 'list', 'full', 'none'
    },
    'REDOC_UI_SETTINGS': {
        'hideLoading': True,
        'expandResponses': '200',
    },
    # By default, DRF Spectacular will try to guess your authentication and permission classes.
    # If you have custom ones or want to specify them explicitly for docs:
    # 'SECURITY': [
    #     {
    #         'TokenAuth': {
    #             'type': 'apiKey',
    #             'in': 'header',
    #             'name': 'Authorization'
    #         }
    #     }
    # ]
}
import warnings

# ... (other existing settings) ...

# --- Suppress the specific RuntimeWarning about database access in AppConfig.ready() ---
warnings.filterwarnings(
    "ignore",
    message="Accessing the database during app initialization is discouraged.",
    category=RuntimeWarning
)
